// Generated by CoffeeScript 1.7.1
(function() {
  "use strict";
  window.ArticleTable = (function() {
    function ArticleTable(dom_elem) {
      this.dom_elem = dom_elem;
      this.notifications = document.notification_handler;
    }

    ArticleTable.prototype.initialize = function() {
      var counter, elem, _i, _len, _ref;
      this.oTable = this.dom_elem.dataTable({
        iDisplayLength: 15,
        "sDom": "<'row'<'col-sm-9 view_options'<'#only_low_stock'><'#hidden_articles'><'#hide_parents_label'>><'col-sm-3'l>r><'#only_products_from_cat'>t<'row'<'col-sm-5'i><'col-sm-7'p>>",
        sPaginationType: "bootstrap",
        sWrapper: "dataTables_wrapper form-inline",
        oLanguage: {
          "sProcessing": lang.datatables_sProcessing,
          "sLengthMenu": lang.datatables_sLengthMenu,
          "sZeroRecords": lang.datatables_sZeroRecords,
          "sInfo": lang.datatables_sInfo,
          "sInfoEmpty": lang.datatables_sInfoEmpty,
          "sInfoFiltered": lang.datatables_sInfoFiltered,
          "sInfoPostFix": lang.datatables_sPostFix,
          "sSearch": lang.datatables_sSearch,
          "sInfoThousands": lang.datatables_sInfoThousands,
          "sUrl": "",
          "oPaginate": {
            "sFirst": lang.datatables_sFirst,
            "sPrevious": lang.datatables_sPrevious,
            "sNext": lang.datatables_sNext,
            "sLast": lang.datatables_sLast
          }
        },
        bProcessing: false,
        bServerSide: true,
        bAutoWidth: false,
        sProcessing: "",
        aoColumns: [
          {
            sClass: 'is-active',
            bSortable: false
          }, {
            sClass: 'title',
            bSortable: false
          }, {
            bSortable: false
          }, null, null, null, null, null, null, {
            sClass: 'price'
          }, {
            sClass: 'bprice'
          }, {
            sClass: 'tprice'
          }, {
            sClass: 'stock_remindamount',
            bSortable: true
          }, {
            sClass: 'stock_available_date'
          }, {
            sClass: 'stock'
          }, {
            sClass: 'stockflag',
            bSortable: false
          }, {
            sClass: 'varstock'
          }, null, null
        ],
        aLengthMenu: [[10, 15, 20, 25, 50, 100], [10, 15, 20, 25, 50, 100]],
        sAjaxSource: 'ajax/products.php',
        fnServerParams: (function(_this) {
          return function(aoData) {
            aoData.push({
              name: "show_only_low_stock",
              value: $("#show_only_low_stock").is(":checked") ? "true" : "false"
            });
            aoData.push({
              name: "hide_inactive_articles",
              value: $("#hide_inactive_articles").is(":checked") ? "true" : "false"
            });
            aoData.push({
              name: "hide_active_articles",
              value: $("#hide_active_articles").is(":checked") ? "true" : "false"
            });
            return aoData.push({
              name: "hide_parents",
              value: $("#hide_parents").is(":checked") ? "true" : "false"
            });
          };
        })(this),
        fnServerData: (function(_this) {
          return function(sSource, aoData, fnCallback) {
            return $.ajax({
              dataType: 'json',
              url: sSource,
              data: aoData,
              cache: false,
              error: function(data) {
                _this.notifications.hideLoading();
                return _this.notifications.showError(lang.error_product_list_load);
              },
              success: function(json) {
                _this.notifications.hideLoading();
                return fnCallback(json);
              },
              beforeSend: function() {
                return _this.notifications.showLoading(lang.loading);
              }
            });
          };
        })(this),
        fnDrawCallback: (function(_this) {
          return function(oSettings) {
            var col, counter, editable_callback, editable_submitdata, row_selector, that, _i, _len, _ref;
            that = _this;
            _this.dom_elem.find('tbody td.stock_remindamount').bind('click', function() {
              return $(this).find('.amount').trigger('click');
            });
            editable_submitdata = function(value, settings) {
              that.notifications.showLoading(lang.saving);
              return {
                field: $(this).closest('td').attr('class'),
                id: $(this).parents('tr').attr('id')
              };
            };
            editable_callback = function(value, y, x) {
              _this.notifications.hideLoading();
              if (value === "false" || value === false) {
                _this.notifications.showError(lang.save_error);
                return _this.reloadData();
              } else {
                return _this.reloadData();
              }
            };
            _this.dom_elem.find('tbody td.is-active').find("input").on("change", function(ev) {
              var data, el, jqxhr, value;
              el = $(ev.currentTarget);
              value = null;
              if ($(el).is(":checked")) {
                $(el).parents('tr').removeClass('article-inactive');
                value = 1;
              } else {
                $(el).parents('tr').addClass('article-inactive');
                value = 0;
              }
              data = {
                id: $(el).parents('tr').attr('id'),
                field: 'active',
                value: value
              };
              return jqxhr = $.ajax({
                url: 'ajax/save.php',
                type: 'POST',
                dataType: 'json',
                data: data,
                success: function(data) {
                  return $(el).prop('checked', data);
                }
              });
            });
            _this.dom_elem.find('tbody td.price, tbody td.tprice, tbody td.bprice, tbody td.stock, tbody td.stock_remindamount .amount').editable('ajax/save.php', {
              height: '20px',
              width: '60px',
              select: true,
              tooltip: lang.editable_tooltip,
              submitdata: editable_submitdata,
              callback: editable_callback,
              onblur: 'submit'
            });
            _this.dom_elem.find('tbody td.stock_available_date').editable('ajax/save.php', {
              height: '20px',
              width: '75px',
              select: true,
              tooltip: lang.editable_tooltip,
              submitdata: editable_submitdata,
              callback: editable_callback,
              onblur: 'submit'
            });
            counter = 0;
            _ref = _this.columns;
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              col = _ref[_i];
              if (counter === _this.category_column_index) {
                continue;
              }
              if (!col.visible) {
                _this.hideColumn(counter);
              }
              counter = counter + 1;
            }
            row_selector = _this.dom_elem.find('tbody tr');
            return row_selector.bind('click', function(event) {
              var target;
              target = $(event.currentTarget);
              row_selector.removeClass('row_selected');
              return target.toggleClass('row_selected');
            });
          };
        })(this)
      });
      $('#hidden_articles').html($('#hidden_articles_proto').html());
      $('#hidden_articles_proto').html("");
      $('#only_low_stock').html($('#show_only_low_stock_proto').html());
      $('#show_only_low_stock_proto').html("");
      $('#hide_parents_label').html($('#hide_parents_proto').html());
      $('#hide_parents_proto').html("");
      this.columns = [];
      if ($.cookie("stock_manager_columns")) {
        try {
          this.columns = $.parseJSON($.cookie("stock_manager_columns"));
        } catch (_error) {}
      }
      if (this.dom_elem.find("thead th").length !== this.columns.length) {
        if ($.cookie("stock_manager_columns")) {
          $.cookie("stock_manager_columns", null);
        }
        counter = 0;
        _ref = this.dom_elem.find("thead th");
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          elem = _ref[_i];
          this.columns.push({
            title: $(elem).html(),
            visible: $(elem).hasClass("hidden") ? false : true
          });
          if ($.inArray(counter, document.article_table_hidden_columns) !== -1) {
            this.columns[counter].visible = false;
          }
          counter++;
        }
        if ($.media({
          'max-width': '1280px'
        })) {
          this.hideColumn(5);
          this.hideColumn(6);
        }
        if ($.media({
          'max-width': '1024px'
        })) {
          this.hideColumn(3);
        }
      }
      return this.addListeners();
    };

    ArticleTable.prototype.addListeners = function() {
      var el, els, _i, _len;
      els = [$("#hide_inactive_articles"), $("#hide_active_articles"), $("#show_only_low_stock"), $("#hide_parents")];
      for (_i = 0, _len = els.length; _i < _len; _i++) {
        el = els[_i];
        $(el).bind('change', (function(_this) {
          return function(event) {
            return _this.reloadData();
          };
        })(this));
      }
      this.dom_elem.find('thead input').typeWatch({
        callback: (function(_this) {
          return function(data, el) {
            return _this.search($("thead input").index(el), data);
          };
        })(this),
        wait: 600,
        highlight: true,
        captureLength: 0
      });
      return $.contextMenu({
        selector: "" + this.dom_elem.selector + " thead th",
        position: function(opt, x, y) {
          return opt.$menu.css({
            left: x,
            top: 50
          });
        },
        build: (function(_this) {
          return function(trigger, event) {
            var col, column_selector_items, counter, _j, _len1, _ref;
            column_selector_items = [];
            counter = 0;
            _ref = _this.columns;
            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
              col = _ref[_j];
              column_selector_items.push({
                name: col.title,
                icon: col.visible ? "ok" : ""
              });
              counter = counter + 1;
            }
            return {
              callback: function(key, options) {
                _this.toggleColumn(key, true);
                return true;
              },
              items: column_selector_items
            };
          };
        })(this)
      });
    };

    ArticleTable.prototype.hideColumn = function(index, setCookie) {
      var row, _i, _len, _ref;
      if (setCookie == null) {
        setCookie = false;
      }
      _ref = this.dom_elem.find('tr');
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        row = _ref[_i];
        $(row).children().eq(index).addClass('hidden');
      }
      this.columns[index].visible = false;
      if (setCookie) {
        return this.setColumnVisibilityCookie();
      }
    };

    ArticleTable.prototype.showColumn = function(index, setCookie) {
      var row, _i, _len, _ref;
      if (setCookie == null) {
        setCookie = false;
      }
      _ref = this.dom_elem.find('tr');
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        row = _ref[_i];
        $(row).children().eq(index).removeClass('hidden');
      }
      this.columns[index].visible = true;
      if (setCookie) {
        return this.setColumnVisibilityCookie();
      }
    };

    ArticleTable.prototype.toggleColumn = function(index, setCookie) {
      if (setCookie == null) {
        setCookie = false;
      }
      if (this.columns[index].visible) {
        return this.hideColumn(index, setCookie);
      } else {
        return this.showColumn(index, setCookie);
      }
    };

    ArticleTable.prototype.setColumnVisibilityCookie = function() {
      return $.cookie("stock_manager_columns", JSON.stringify(this.columns), {
        expires: 365
      });
    };

    ArticleTable.prototype.search = function(table_column_index, string) {
      return this.oTable.fnFilter(string, table_column_index);
    };

    ArticleTable.prototype.reloadData = function() {
      return this.oTable.fnDraw(false);
    };

    return ArticleTable;

  })();

}).call(this);
